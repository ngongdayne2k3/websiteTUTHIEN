@model X.PagedList.IPagedList<websiteTUTHIEN.Models.TableDuAn>
@using X.PagedList.Mvc.Core
@using X.PagedList

@{
    ViewBag.Title = "Danh sách Dự án";
}

<h2 class="text-center" style="margin: 30px 0;">Danh sách Dự án</h2>

<div>
    <form method="get" id="filterForm">
        <div>
        <label for="searchString">Tìm kiếm theo tên dự án:</label>
        <input type="text" name="searchString" value="@ViewBag.currentFilter" />
    </div>
    <div>
        <label for="maDanhMuc">Danh mục:</label>
        @Html.DropDownList("maDanhMuc", ViewBag.DanhMucDuAn as SelectList, "-- Chọn danh mục --", new { @class = "form-control" })
    </div>
    <div>
        <label for="maTinhThanh">Tỉnh thành:</label>
        @Html.DropDownList("maTinhThanh", ViewBag.TinhThanh as SelectList, "-- Chọn tỉnh thành --", new { @class = "form-control" })
    </div>
    <div>
        <label for="coNghiemTrong">Có nghiêm trọng:</label>
        <input type="checkbox" name="coNghiemTrong" value="true" />
    </div>
    <div>
        <input type="submit" value="Lọc" class="btn btn-primary" />
    </div>
    </form>
</div>

<div class="row d-flex justify-content-center">
    @if (Model != null && Model.Count() > 0)
    {
        foreach (var item in Model)
        {
            <div class="col-md-3 col-sm-6 mb-4">
                <div class="card d-flex flex-column" style="border-radius: 8px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); height: 100%;">
                    <!-- Hình ảnh minh họa -->
                    <img src="@item.Hinhanh" class="card-img-top" alt="@item.TenDuAn">
                    <div class="card-body">
                        <!-- Tiêu đề dự án -->
                        <h5 class="card-title">
                            @item.TenDuAn
                        </h5>
                        <!-- Nội dung dự án (100 ký tự) -->
                        <p class="card-text">
                            @(item.NoidungDuAn.Length > 100
                                ? item.NoidungDuAn.Substring(0, 100) + "..."
                                : item.NoidungDuAn)
                        </p>
                        <!-- Nút Xem chi tiết -->
                        <div class="text-center">
                            <a href="@Url.Action("ChiTietDuAn", "DuAn", new { id = item.MaDuAn })" class="btn btn-primary">
                                Xem chi tiết
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="col-12 text-center">
            <p>Không có dự án nào để hiển thị</p>
        </div>
    }
</div>

<div class="text-center">
    @Html.PagedListPager(Model, page => Url.Action("IndexDuAn", new
        {
            page,
            searchString = ViewBag.currentFilter,
            maDanhMuc = Context.Request.Query["maDanhMuc"],
            maTinhThanh = Context.Request.Query["maTinhThanh"],
            maVungMien = Context.Request.Query["maVungMien"],
            ngay = Context.Request.Query["ngay"],
            thang = Context.Request.Query["thang"],
            nam = Context.Request.Query["nam"],
            coNghiemTrong = Context.Request.Query["coNghiemTrong"]
        }))
</div>

<style>
    .form-inline {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        justify-content: center;
        margin-bottom: 20px;
    }

    .card {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        height: 100%;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .card-body {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .card .btn {
        margin-top: auto;
    }

    .card img {
        height: 180px;
        object-fit: cover;
    }

    .card-title {
        min-height: 48px;
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 2;
        overflow: hidden;
    }

    .card-text {
        max-height: 100px;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .text-center {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 20px;
    }

    .pagination {
        display: flex;
        justify-content: center;
        padding: 0;
    }

        .pagination li {
            list-style-type: none;
            margin: 0 5px;
        }

            .pagination li a, .pagination li span {
                padding: 8px 16px;
                border: 1px solid #ccc;
                border-radius: 4px;
                color: #007bff;
                text-decoration: none;
            }

                .pagination li a:hover, .pagination li span:hover {
                    background-color: #007bff;
                    color: white;
                }

        .pagination .active a {
            background-color: #007bff;
            color: white;
        }
</style>

<script>
    let searchTimeout;
    const searchBox = document.querySelector('input[name="searchString"]');

    searchBox.addEventListener('input', function () {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
            document.getElementById('filterForm').submit();
        }, 500);
    });
</script>
